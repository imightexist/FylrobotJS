var ignoredUsers=[]; var css="body {\n  margin: 0px;\n  font-family: &quot;Arial&quot;;\n}\n\n.example {\n  padding: 20px;\n}\n\ninput[type=button] {\n  padding: 5px 10px;\n  margin: 10px 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  background: #ddd;\n  border: 1px solid #ccc;\n}\ninput[type=button]:hover {\n  background: #ccc;\n}\n\n.confirm {\n  display: none;\n}\n.confirm > div:first-of-type {\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  top: 0px;\n  left: 0px;\n}\n.confirm > div:last-of-type {\n  padding: 10px 20px;\n  background: white;\n  position: absolute;\n  width: auto;\n  height: auto;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 5px;\n  border: 1px solid #333;\n}\n.confirm > div:last-of-type div:first-of-type {\n  min-width: 150px;\n  padding: 10px;\n}\n.confirm > div:last-of-type div:last-of-type {\n  text-align: right;\n}",cssElement=document.createElement("style");cssElement.innerHTML=css,document.head.appendChild(cssElement);var ui={confirm:async n=>createConfirm(n)},createConfirm=n=>new Promise((e,i)=>{$("#confirmMessage").text(n),$("#confirmYes").off("click"),$("#confirmNo").off("click"),$("#confirmYes").on("click",()=>{$(".confirm").hide(),e(!0)}),$("#confirmNo").on("click",()=>{$(".confirm").hide(),e(!1)}),$(".confirm").show()}),save=async()=>{if(localStorage.getItem("noshow"));else{location.href="#vm-view"; if(await ui.confirm("Welcome to Fylrobot v2! This is a new, and improved version that replaces tunnel. Some of it doesn't work, as this is beta and many things need to be fixed."))console.log("okay clicked");else{console.log("do not show again");localStorage.setItem("noshow","yes")}}},confirmhtml='<div class="confirm">\n  <div></div>\n  <div>\n    <div id="confirmMessage">Welcome to Fylrobot v2! This is a new, and improved version that replaces tunnel. Some of it doesn\'t work, as this is beta and many things need to be fixed.</div>\n    <div>\n      <input id="confirmYes" type="button" value="Okay" />\n      <input id="confirmNo" type="button" value="Don\'t show this again" />\n    </div>\n  </div>\n</div>',newDiv=document.createElement("div");newDiv.innerHTML=confirmhtml,document.body.appendChild(newDiv),save();
function crash(){var txt = "a"; while(1){ txt = txt += "a"; }}; var tunnel={}; var userName=document.getElementById('chat-user').innerHTML; tunnel.changeName=function(user){var usern=document.getElementById('username-box'); var ok=document.getElementById('username-ok-btn'); usern.value=user; ok.click();};tunnel.chat=function(phrase){var chatI=document.getElementById('chat-input'); chatI.value=phrase; document.getElementById('chat-send-btn').click();}; tunnel.takeTurn=function(){document.getElementById('turn-btn').click();}; tunnel.vote=function(vote){var vy=document.getElementById('vote-yes'); var vn=document.getElementById('vote-no'); if (vote === 0){vy.click(); if (vote === 1){vn.click();}}}; var autotyper={}; autotyper.typePhrase=function(str){function optKey(letter){ var num=letter.charCodeAt(0); let element = document.querySelector('canvas'); element.dispatchEvent(new KeyboardEvent('keydown',{'key': letter, 'code': 'Key' + letter,  keyCode: num, which: num,    shiftKey: false,  ctrlKey: false,  metaKey: false })); element.dispatchEvent(new KeyboardEvent('keyup',{'key': letter, 'code': 'Key' + letter,  keyCode: num, which: num,    shiftKey: false,  ctrlKey: false, metaKey: false })); }; for (var i = 0; i < str.length; i++) {
var curLetter=str.charAt(i); optKey(curLetter);}}; function atPrompt(){var k=prompt('What do you want to autotype? (Focus on VM display before it starts autotyping, 3 second countdown)'); document.querySelector('canvas').focus(); setTimeout(function(){autotyper.typePhrase(k);}, 3000);}; 
var name=document.getElementById('chat-user').innerHTML;
tunnel.changeName("Fylrobot"); tunnel.chat("Fylrobot has been invited by @" + name + "!"); 
tunnel.changeName(name); var input=document.createElement("input");input.placeholder="Bot commands here..."; input.id="inp"; document.body.appendChild(input);var btn=document.createElement("button");btn.onclick=getInput;btn.innerHTML="Send!";   document.body.appendChild(btn); var btn2=document.createElement("button");btn2.onclick=function(){window.open("https://unzor.github.io/FylrobotJS/commands.txt");};btn2.innerHTML="Commands";    document.body.appendChild(btn2); input.style="color:#999; margin: auto; padding:9px; font-size: 12px;border:2px solid gray; border-radius:2px; background-color:#FFF;"; btn.style="background-color: #4CAF50; border: 2px solid gray;color: white;padding: 9px;  text-align: center; text-decoration: none;display: inline-block;font-size: 12px;border-radius:2px; margin-left:6px;"; btn2.style="background-color: #4CAF50; border: 2px solid gray;color: white;padding: 9px;  text-align: center; text-decoration: none;display: inline-block;font-size: 12px;border-radius:2px; margin-left:6px;"; function getInput(){ tunnel.chat(input.value); if (input.value === "!fuckerscript"){input.value=""; tunnel.changeName("Fylrobot"); tunnel.chat("get crashed"); tunnel.changeName(name); crash();}
if (input.value === "!turnspam"){input.value=""; tunnel.changeName("Fylrobot"); tunnel.chat("Turnspam is on. Message by Fylrobot, at unzor.github.io/FylrobotJS.");
tunnel.changeName(name); setInterval(function(){tunnel.takeTurn();}, 10);} if (input.value === "!spam"){input.value=""; tunnel.changeName("Fylrobot"); tunnel.chat("Spam turned on. To stop spam, press CTRL+Q. Message by Fylrobot, at unzor.github.io/FylrobotJS."); tunnel.changeName(userName); var p=prompt("What would you like to spam?"); var b=p+"                 "; var i1=setInterval(function(){tunnel.chat(p)}, 1000); var i2=setInterval(function(){tunnel.chat(b)}, 2500); document.addEventListener("keydown", function (event) {if(event.ctrlKey && event.keyCode == 81) {clearInterval(i1);clearInterval(i2); } }); var div=document.createElement("div");div.style.backgroundColor="black";div.style.color="white";div.innerHTML="Note: to stop spam, press CTRL+Q.";div.style.position="fixed";div.style.bottom= "90%";div.style.left="42%"; div.style.zIndex="999999999"; document.body.appendChild(div);setTimeout(function(){div.style.display="none";}, 4000);}; if (input.value === "!rapidname"){input.value=""; tunnel.changeName("Fylrobot"); tunnel.chat("Rapid name turned on."); tunnel.changeName(name); setInterval(function(){tunnel.changeName(Math.floor(Math.random() * 100000));
}, 10);} if (input.value === "!randommessage"){input.value=""; var rArray=["Banana Shooter", "Smelly Toast", "Flying Pigs"];var num=Math.floor(Math.random() * 4);tunnel.changeName("Fylrobot"); tunnel.chat(rArray[num]); tunnel.changeName(name);}if (input.value === "!breakkeyboard"){input.value=""; tunnel.changeName("Fylrobot"); tunnel.chat("crashed you for being a forkie"); tunnel.changeName(name); crash();} if (input.value === "!screenshot"){input.value=""; var vmimage=document.querySelector('canvas').toDataURL(); var oj=document.createElement("a"); oj.href=vmimage; oj.innerHTML="a"; oj.download="download";oj.style.opacity="0";document.body.appendChild(oj);oj.click();}if (input.value === "!help"){input.value=""; tunnel.changeName("Fylrobot");tunnel.chat("For full list of Fylrobot commands, see unzor.github.io/FylrobotJS/commands.txt."); tunnel.changeName(name);} if (input.value === "!advertise"){input.value=""; setInterval(function(){tunnel.changeName("Fylrobot"); tunnel.chat("Want Fylrobot for yourself? Go to unzor.github.io/FylrobotJS to get it."); tunnel.changeName(name);}, 100000);}if (input.value === "!custommessage"){input.value=""; var p=prompt("What would you like to say?"); tunnel.changeName("Fylrobot"); tunnel.chat(p); tunnel.changeName(name);}; if (input.value === "!disconnect"){input.value=""; location.reload();}
if (input.value === '!record'){input.value=""; var seconds=prompt('How long to record?'); var mss=seconds+'000'; tunnel.changeName('Fylrobot'); tunnel.chat('Video of VM will be downloaded. Message by Fylrobot, at unzor.github.io/FylrobotJS/'); tunnel.changeName(name); var canvas = document.querySelector('canvas'); var stream = canvas.captureStream(25); var recordedChunks = []; console.log(stream); var options = { mimeType: "video/webm; codecs=vp9" }; mediaRecorder = new MediaRecorder(stream, options); mediaRecorder.ondataavailable = handleDataAvailable; mediaRecorder.start(); function handleDataAvailable(event) { console.log("data-available"); if (event.data.size > 0) { recordedChunks.push(event.data); console.log(recordedChunks); download(); } else { } } function download() { var blob = new Blob(recordedChunks, { type: "video/webm" }); var url = URL.createObjectURL(blob); var a = document.createElement("a"); document.body.appendChild(a); a.style = "display: none"; a.href = url; a.download = "vm-recording.mp4"; a.click(); window.URL.revokeObjectURL(url); }  setTimeout(event => { console.log("stopping"); mediaRecorder.stop(); }, mss);} if (input.value === '!customscript'){input.value=""; var url=prompt("What is the the URL to the script you want to add?"); var scrept=document.createElement("script"); scrept.src=url; document.head.appendChild(scrept); tunnel.changeName("Fylrobot"); tunnel.chat("Custom script added. Message by Fylrobot, at unzor.github.io/FylrobotJS."); tunnel.changeName(name);} if (input.value === '!darkmode'){input.value=""; "use strict"; var styleElem = document.createElement("style"); styleElem.type = "text/css"; styleElem.innerHTML = ` body { background-color: #222; } .navbar>.container-fluid, .thumbnail { background-color: #333 !important; background-image: none !important; } .btn { background-color: #333 !important; background-image: none !important; border-color: #444 !important; color: #ccc !important; text-shadow: none !important; } .list-group-item.disabled { background-color: #444 !important; color: #ccc; filter: none; } .list-group-item { background-color: black; } #chat-panel, #chat-input, #chat-user, .guac-keyboard-disabled, .modal-content, .alert { color: white; background-color: #111; } .message-pane li { border-bottom: 1px solid #333; box-shadow: 0 1px 0 0 #666; } .navbar, .page-header, .thumbnail { border-color: #444 !important; border-bottom-color: #444 !important; } .navbar-brand, .navbar-collapse>ul>li>a, .page-header>h2, #vm-list, .thumbnail>.caption>h4 { color: #ddd !important; } .username::before { color: #fff; } .username, .message-pane .username { color: white; } .input-group-addon, .form-control { border-color: #333; } .list-group-item { border-color: #444; } .panel { border-color: #444; } .message-pane li:hover { background-color: #2b2b2b; } .has-turn.list-group-item { background-color: #365c6b; color: white; } .waiting-turn.list-group-item { background-color: #66662C; color: white; } .alert-info { background-image: none; border-color: #434343; color: white; } `; document.head.appendChild(styleElem); } if (input.value === '!autotype'){atPrompt();} if (input.value === '!voteyes'){input.value=""; tunnel.vote("vote", '1'); } if (input.value === '!voteno'){input.value=""; tunnel.vote(1); } if (input.value.includes("!ignore")){tunnel.changeName("Fylrobot"); tunnel.chat("User " + input.value.split("!ignore ").pop() + " ignored. Use !unignore to unhide the person."); tunnel.changeName(name); var targetNode = document.body; var config = { attributes: true, childList: true, subtree: true }; var callback = function(mutationsList, observer) { for(const mutation of mutationsList) { if (mutation.type === 'childList') { ignoredUsers.forEach(function(element){if (mutation.addedNodes[0].querySelector('.username').innerHTML === element){document.getElementById('chat-sound-btn').click(); mutation.addedNodes[0].remove(); document.getElementById('chat-sound-btn').click(); }}); } else if (mutation.type === 'attributes') { } } }; var observer = new MutationObserver(callback); observer.observe(targetNode, config); ignoredUsers.push(input.value.split("!ignore ").pop()); input.value="";}; if (input.value.includes("!unignore")){ignoredUsers.splice(ignoredUsers.indexOf(input.value.split("!unignore ").pop())); tunnel.changeName('Fylrobot'); tunnel.chat('User ' + input.value.split("!unignore ").pop() + ' unignored.'); tunnel.changeName(name);}; if("!flrorun"===input.value){input.value="",prompt("URL of .flro script to run:");var _0x32bb11=_0x9357;!function(e,n){for(var t=_0x9357,o=_0x26ae();;)try{if(296194===parseInt(t(328))/1*(-parseInt(t(321))/2)+parseInt(t(316))/3+parseInt(t(288))/4+-parseInt(t(306))/5*(parseInt(t(351))/6)+-parseInt(t(305))/7+-parseInt(t(319))/8+-parseInt(t(367))/9*(-parseInt(t(331))/10))break;o.push(o.shift())}catch(e){o.push(o.shift())}}();var tunnel={},userName=document[_0x32bb11(349)](_0x32bb11(357)).innerHTML;function _0x26ae(){var e=["PrintInChat","chat-user","Smelly Toast","!record","What is the the URL to the script you want to add?","changeName","vote-yes","999999999","position","observe","tunnel.","477dneKCm","!voteyes","click","!voteno"," unignored.","Fylrobot","chat","Video of VM will be downloaded. Message by Fylrobot, at unzor.github.io/FylrobotJS/","use strict","ondataavailable","splice","none","forEach","Turnspam is on. Message by Fylrobot, at unzor.github.io/FylrobotJS.","log","style","                 ","data-available","indexOf","!custommessage","bottom",".username","download","childList","vote-no","replaceAll","CollabVM:","Banana Shooter","href","floor","Flying Pigs","URL","body","keyCode","push","start","data","What would you like to spam?","display: none","revokeObjectURL","reload","vote","!screenshot","stop","ctrlKey","video/webm","head","split","1578020zieBvp","addEventListener","includes","type","42%","querySelector","black","pop","video/webm; codecs=vp9","opacity","text/css","Want Fylrobot for yourself? Go to unzor.github.io/FylrobotJS to get it.","User ","!ignore","_instance_","CollabVM","call","3610908LoWfja","5rXSWNF"," body { background-color: #222; } .navbar>.container-fluid, .thumbnail { background-color: #333 !important; background-image: none !important; } .btn { background-color: #333 !important; background-image: none !important; border-color: #444 !important; color: #ccc !important; text-shadow: none !important; } .list-group-item.disabled { background-color: #444 !important; color: #ccc; filter: none; } .list-group-item { background-color: black; } #chat-panel, #chat-input, #chat-user, .guac-keyboard-disabled, .modal-content, .alert { color: white; background-color: #111; } .message-pane li { border-bottom: 1px solid #333; box-shadow: 0 1px 0 0 #666; } .navbar, .page-header, .thumbnail { border-color: #444 !important; border-bottom-color: #444 !important; } .navbar-brand, .navbar-collapse>ul>li>a, .page-header>h2, #vm-list, .thumbnail>.caption>h4 { color: #ddd !important; } .username::before { color: #fff; } .username, .message-pane .username { color: white; } .input-group-addon, .form-control { border-color: #333; } .list-group-item { border-color: #444; } .panel { border-color: #444; } .message-pane li:hover { background-color: #2b2b2b; } .has-turn.list-group-item { background-color: #365c6b; color: white; } .waiting-turn.list-group-item { background-color: #66662C; color: white; } .alert-info { background-image: none; border-color: #434343; color: white; } ","captureStream","takeTurn","keydown","!darkmode","display","chat-input","tunnel.chat(","addedNodes","63078YUJkkD","createElement","!customscript","1910968vdJXZq","!turnspam","96830FMhIQi","Code","!spam","!rapidname","stopping","attributes","white","3NnZxPV","!unignore ","username-ok-btn","184890WENara","innerHTML","get crashed","Spam turned on. To stop spam, press CTRL+Q. Message by Fylrobot, at unzor.github.io/FylrobotJS.","left","toDataURL","For full list of Fylrobot commands, see unzor.github.io/FylrobotJS/commands.txt.","createObjectURL","turn-btn","!randommessage","!ignore ","username-box","appendChild","000","color","fixed","!autotype","!advertise","getElementById","!help","1195764gSixyr","random","Note: to stop spam, press CTRL+Q.","PrintInChat(","remove"];return(_0x26ae=function(){return e})()}function getInput(e){var n=_0x32bb11;if("!fuckerscript"===e&&(e="",tunnel[n(361)](n(372)),tunnel.chat(n(333)),tunnel[n(361)](name),crash()),e===n(320)&&(e="",tunnel[n(361)](n(372)),tunnel[n(373)](n(380)),tunnel[n(361)](name),setInterval(function(){tunnel[n(309)]()},10)),e===n(323)){e="",tunnel[n(361)](n(372)),tunnel[n(373)](n(334)),tunnel[n(361)](userName);var t=(d=prompt(n(277)))+n(383),o=setInterval(function(){tunnel[n(373)](d)},1e3),r=setInterval(function(){tunnel[n(373)](t)},2500);document[n(289)](n(310),function(e){var t=n;e[t(284)]&&81==e[t(273)]&&(clearInterval(o),clearInterval(r))});var a=document.createElement("div");a[n(382)].backgroundColor=n(294),a[n(382)][n(345)]=n(327),a[n(332)]=n(353),a[n(382)][n(364)]=n(346),a[n(382)][n(387)]="90%",a[n(382)][n(335)]=n(292),a[n(382)].zIndex=n(363),document[n(272)][n(343)](a),setTimeout(function(){var e=n;a.style[e(312)]=e(378)},4e3)}if(e===n(324)&&(e="",tunnel[n(361)](n(372)),tunnel[n(373)]("Rapid name turned on."),tunnel.changeName(name),setInterval(function(){var e=n;tunnel[e(361)](Math[e(396)](1e5*Math.random()))},10)),e===n(340)){e="";var l=[n(394),n(358),n(397)],u=Math.floor(4*Math[n(352)]());tunnel[n(361)](n(372)),tunnel[n(373)](l[u]),tunnel[n(361)](name)}if("!breakkeyboard"===e&&(e="",tunnel[n(361)]("Fylrobot"),tunnel[n(373)]("crashed you for being a forkie"),tunnel[n(361)](name),crash()),e===n(282)){e="";var c=document[n(293)]("canvas")[n(336)](),i=document[n(317)]("a");i[n(395)]=c,i[n(332)]="a",i[n(389)]=n(389),i[n(382)][n(297)]="0",document[n(272)].appendChild(i),i[n(369)]()}if(e===n(350)&&(e="",tunnel[n(361)](n(372)),tunnel[n(373)](n(337)),tunnel[n(361)](name)),e===n(348)&&(e="",setInterval(function(){var e=n;tunnel.changeName(e(372)),tunnel[e(373)](e(299)),tunnel[e(361)](name)},1e5)),e===n(386)){e="";var d=prompt("What would you like to say?");tunnel[n(361)](n(372)),tunnel[n(373)](d),tunnel[n(361)](name)}if("!disconnect"===e&&(e="",location[n(280)]()),e===n(359)){e="";var s=prompt("How long to record?")+n(344);tunnel.changeName(n(372)),tunnel[n(373)](n(374)),tunnel[n(361)](name);var b=document[n(293)]("canvas")[n(308)](25),m=[];console[n(381)](b);var p={mimeType:n(296)};mediaRecorder=new MediaRecorder(b,p),mediaRecorder[n(376)]=function(e){var t=n;console[t(381)](t(384)),e.data.size>0&&(m.push(e[t(276)]),console.log(m),o=n,r=new Blob(m,{type:o(285)}),a=URL[o(338)](r),l=document[o(317)]("a"),document[o(272)][o(343)](l),l[o(382)]=o(278),l[o(395)]=a,l.download="vm-recording.mp4",l[o(369)](),window[o(398)][o(279)](a));var o,r,a,l},mediaRecorder[n(275)](),setTimeout(e=>{var t=n;console[t(381)](t(325)),mediaRecorder[t(283)]()},s)}if(e===n(318)){e="";var h=prompt(n(360)),v=document[n(317)]("script");v.src=h,document.head[n(343)](v),tunnel.changeName(n(372)),tunnel[n(373)]("Custom script added. Message by Fylrobot, at unzor.github.io/FylrobotJS."),tunnel[n(361)](name)}if(e===n(311)){e="",n(375);var g=document[n(317)](n(382));g[n(291)]=n(298),g[n(332)]=n(307),document[n(286)].appendChild(g)}if(e===n(347)&&atPrompt(),e===n(368)&&(e="",tunnel[n(281)]("vote","1")),e===n(370)&&(e="",tunnel[n(281)](1)),e[n(290)](n(301))){tunnel[n(361)]("Fylrobot"),tunnel[n(373)](n(300)+e.split(n(341))[n(295)]()+" ignored. Use !unignore to unhide the person."),tunnel[n(361)](name);var f=document[n(272)];new MutationObserver(function(e,t){var o=n;for(const n of e)n.type===o(390)?ignoredUsers[o(379)](function(e){var t=o;n[t(315)][0][t(293)](t(388)).innerHTML===e&&(document[t(349)]("chat-sound-btn")[t(369)](),n.addedNodes[0][t(355)](),document.getElementById("chat-sound-btn")[t(369)]())}):(n.type,o(326))})[n(365)](f,{attributes:!0,childList:!0,subtree:!0}),ignoredUsers[n(274)](e[n(287)](n(341))[n(295)]()),e=""}e[n(290)]("!unignore")&&(ignoredUsers[n(377)](ignoredUsers[n(385)](e[n(287)](n(329))[n(295)]())),tunnel[n(361)](n(372)),tunnel[n(373)]("User "+e[n(287)](n(329))[n(295)]()+n(371)),tunnel[n(361)](name))}function _0x9357(e,n){var t=_0x26ae();return(_0x9357=function(e,n){return t[e-=272]})(e,n)}tunnel[_0x32bb11(361)]=function(e){var n=_0x32bb11,t=document[n(349)](n(342)),o=document[n(349)](n(330));t.value=e,o[n(369)]()},tunnel[_0x32bb11(373)]=function(e){var n=_0x32bb11;document[n(349)](n(313)).value=e,document[n(349)]("chat-send-btn").click()},tunnel[_0x32bb11(309)]=function(){var e=_0x32bb11;document.getElementById(e(339))[e(369)]()},tunnel.vote=function(e){var n=_0x32bb11,t=document[n(349)](n(362)),o=document[n(349)](n(391));0===e&&(t[n(369)](),1===e&&o[n(369)]())};var keywords=[_0x32bb11(372),_0x32bb11(356),_0x32bb11(303)],Fylrobot={RunCommand:function(e){getInput(e)}},FlroInterpreter={run:function(e){var n=_0x32bb11;FlroInterpreter[n(302)]={Code:e},evalInContext[n(304)]({PrintInChat:function(e){tunnel.chat(e)},CollabVM:tunnel})}};function evalInContext(){var _0x4b05bc=_0x32bb11;eval(FlroInterpreter[_0x4b05bc(302)][_0x4b05bc(322)][_0x4b05bc(392)](_0x4b05bc(354),_0x4b05bc(314))[_0x4b05bc(392)](_0x4b05bc(393),_0x4b05bc(366)))}(async()=>{var e=await fetch("https://smoggy-opaque-radar.glitch.me/spam.flro");FlroInterpreter.run(e)})()};};
